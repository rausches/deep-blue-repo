@model Uxcheckmate_Main.Models.Report
@{
    var websiteScreenshot  = TempData["WebsiteScreenshot"] as string;
    var userIsAuthenticated = User.Identity.IsAuthenticated;
}
@*
============================================================================================
                        HEADER (Screenshot, URL, #of issues)
============================================================================================
*@
<!-- Auto-launch Modal -->
@*<div class="modal fade" id="onLoadModal" tabindex="-1" aria-labelledby="onLoadModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content shadow-lg rounded-4">
      <div class="modal-header">
        <h5 class="modal-title" id="onLoadModalLabel">Your AI-Generated Report Summary</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>We've analyzed your site and generated design suggestions.</p>
        <p id="summary">@Model.Summary</p>
        <p class="mb-0"><strong>Tip:</strong> You can click any issue to expand and learn more.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary btn-global " data-bs-dismiss="modal" id="letsgo">Let’s Go</button>
      </div>
    </div>
  </div>
</div>
*@
<div class="container">
    <div class="row headerRow">
        <div class="col-md-6">
           @* <img id="screenshotImage" src="@websiteScreenshot " alt="Website Screenshot" class="img-fluid" />*@
            <img src="data:image/png;base64,@TempData["WebsiteScreenshot"]"id="screenshotImage" class="img-fluid" alt="Website Screenshot">

        </div>
        <div class="col-md-6 reportHeaderRight">
            @* Display the URL associated with the report *@
            <h1 id="reportHeader">@Model.Url</h1>
            @* Display the total number of issues found *@
            <p id="totalIssues">Total Issues Found: @(@Model.DesignIssues.Count() + @Model.AccessibilityIssues.Count()) </p>
            <button class="btn btn-primary btn-global mb-3" id="viewSummaryBtn" hidden>View Summary</button>
        </div>
    </div>

<br>

<div id="reportContainer">
    <div class="row sortSelectRow">
        <div class="col-md-8"></div>
        <div class="col-md-4 sortSelectCol">
            @* Dropdown for selecting sort order of the issues *@
            <select id="sortSelect" class="form-select mb-4" data-report-id="@Model.Id" disabled>
                <option value="category" selected="@(ViewBag.CurrentSort == "category")">Category</option>
                <option value="severity-high-low" selected="@(ViewBag.CurrentSort == "severity-high-low")">Severity (High to Low)</option>
                <option value="severity-low-high" selected="@(ViewBag.CurrentSort == "severity-low-high")">Severity (Low to High)</option>
            </select>
        </div>
    </div>

@*
============================================================================================
                                    Design Issues
============================================================================================
*@
<div class="row designRow position-relative">
    <div class="report-section mb-5">
        <h3 class="section-header mb-4">Design Issues</h3>

        <!-- FULL ROW OVERLAY -->
        <div id="designIssuesOverlay" class="overlay">
            <div class="spinner-grow text-light" role="status"></div>
        </div>

        <!-- ISSUES CONTENT -->
        <div id="designIssuesWrapper">
            <div id="designIssuesContainer">
                @await Html.PartialAsync("_DesignIssuesPartial", Model.DesignIssues)
            </div>
        </div>

    </div>
</div>


<br>

@*
============================================================================================
                                Accessibility Issues
============================================================================================
*@
    <div class="row accessiblityRow">
        <div class="report-section mb-5">
            <h3 class="section-header mb-4">Accessibility Issues</h3>
            <div id="accessibilityIssuesContainer">
                @* Partial view rendering accessibility issues *@
            <div id="accessibilityIssuesContainer">
                @if (Model.AccessibilityIssues == null || !Model.AccessibilityIssues.Any())
                {
                    <div class="alert alert-primary" role="alert">
                        <strong>Way to go! Your site is WCAG-approved and accessible to all.</strong>
                    </div>
                }
                else
                {
                    @await Html.PartialAsync("_AccessibilityIssuesPartial", Model.AccessibilityIssues)
                }
            </div>
        </div>
    </div>
</div>

<br>
@if (!userIsAuthenticated)
{
    <div class="row save-report-content">
        <p><strong>Want to save this report?</strong> Create an account or log in now — we'll automatically link this report to your profile.</p>

        <form method="post" asp-action="StoreReportIdBeforeAuth" asp-controller="Home">
            <input type="hidden" name="reportId" value="@Model.Id" />
            <button type="submit" name="authType" value="register" class="btn btn-outline-primary me-2 btn-global">Create Account</button>
            <button type="submit" name="authType" value="login" class="btn btn-outline-secondary btn-global">Log In</button>
        </form>
    </div>
}
<br>
@*
============================================================================================
                                Print PDF
============================================================================================
*@

<div class="row">
    <a asp-action="DownloadReport" asp-route-id="@Model.Id" class="btn btn-primary btn-global downloadBtn">
        Download PDF Report
    </a>
</div>

<br>
<button onclick="scrollToTop()" id="scrollTopBtn" title="Go to top" class="btn btn-dark">
    <img src="~/images/back_to_top_icon.png" alt="back to top icon" width="60%;"><br>
</button>
<br>

<script>
    const scrollTopBtn = document.getElementById("scrollTopBtn");

    // Show button when user scrolls down 100px
    window.onscroll = function () {
        if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {
            scrollTopBtn.style.display = "block";
        } else {
            scrollTopBtn.style.display = "none";
        }
    };

    // Scroll to top smoothly
    function scrollToTop() {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    }
</script>
</div> @* End tag for #reportContainer *@
</div> @*End tag for .container *@
@section Scripts {
    <script src="~/js/reportResults.js"></script>
}